# -*- mode: ruby -*-
# vi: set ft=ruby :

# RENAME this file to simply Vagrantfile and put it into some directory...somewhere
# Obviously Vagrant and a Hypervisor it can control should be installed
# If the above sentence makes no sense to you, go learn about Vagrant and Virtualization
#
# This Vagrantfile clones from the base Ubuntu Vagrant Template VM (aka "Box")
# Then runs the series of command to create a Python virtualenv, install the dependencies, and run the app
# Please alter the networking as needed.

Vagrant.configure("2") do |config|
  # This will work on most x86 systems using Virtualbox
  # It will not work on ARM64 (Apple Silicon) machines using VMware Fusion
  config.vm.box = "ubuntu/focal64"


  # Configure Port Forwarding as needed.  For example:
  # Expose port 5000 from the VM to the Host. Flask uses tcp 5000 by default
  config.vm.network "forwarded_port", guest: 5000, host: 5000

  # Specify a host only network if you want.
  # config.vm.network "private_network", ip: "192.168.56.10"

  # Bridge the VM is you want
  # config.vm.network "public_network"

  # Alter VM's setting to increase RAM if needed
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #

  # Use the Vagrant provisioner to install Docker in the VM
  config.vm.provision "shell", inline: <<-SHELL

    apt-get update

    apt install -y python3.8-venv

    git clone https://github.com/axbjos/geometry_web_complete.git

    cd geometry_web_complete

    python3 -m venv venv

    source venv/bin/activate

    pip3 install -r requirements.txt

    # start the app, run in background
    python3 Geometry.py &

  SHELL
end